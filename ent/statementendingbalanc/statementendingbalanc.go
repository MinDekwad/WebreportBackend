// Code generated by entc, DO NOT EDIT.

package statementendingbalanc

const (
	// Label holds the string label denoting the statementendingbalanc type in the database.
	Label = "statement_ending_balanc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uid"
	// FieldStatementBalance holds the string denoting the statement_balance field in the database.
	FieldStatementBalance = "Statement_Balance"
	// FieldStatementDate holds the string denoting the statement_date field in the database.
	FieldStatementDate = "Statement_Date"

	// EdgeBank holds the string denoting the bank edge name in mutations.
	EdgeBank = "bank"

	// Table holds the table name of the statementendingbalanc in the database.
	Table = "statement_ending_balance"
	// BankTable is the table the holds the bank relation/edge.
	BankTable = "statement_ending_balance"
	// BankInverseTable is the table name for the Bankdetail entity.
	// It exists in this package in order to avoid circular dependency with the "bankdetail" package.
	BankInverseTable = "bank_detail"
	// BankColumn is the table column denoting the bank relation/edge.
	BankColumn = "Bank_UID"
)

// Columns holds all SQL columns for statementendingbalanc fields.
var Columns = []string{
	FieldID,
	FieldStatementBalance,
	FieldStatementDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the StatementEndingBalanc type.
var ForeignKeys = []string{
	"Bank_UID",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
