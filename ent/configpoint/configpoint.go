// Code generated by entc, DO NOT EDIT.

package configpoint

const (
	// Label holds the string label denoting the configpoint type in the database.
	Label = "configpoint"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTransactionName holds the string denoting the transactionname field in the database.
	FieldTransactionName = "TransactionName"
	// FieldTransactionType holds the string denoting the transactiontype field in the database.
	FieldTransactionType = "TransactionType"
	// FieldPaymentChannel holds the string denoting the paymentchannel field in the database.
	FieldPaymentChannel = "PaymentChannel"
	// FieldPaymentType holds the string denoting the paymenttype field in the database.
	FieldPaymentType = "PaymentType"
	// FieldDummyWallet holds the string denoting the dummywallet field in the database.
	FieldDummyWallet = "DummyWallet"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "Amount"
	// FieldPoint holds the string denoting the point field in the database.
	FieldPoint = "Point"
	// FieldExpire holds the string denoting the expire field in the database.
	FieldExpire = "Expire"
	// FieldUpdateDate holds the string denoting the updatedate field in the database.
	FieldUpdateDate = "UpdateDate"
	// FieldExpireDate holds the string denoting the expiredate field in the database.
	FieldExpireDate = "ExpireDate"
	// FieldStatusTransaction holds the string denoting the statustransaction field in the database.
	FieldStatusTransaction = "StatusTransaction"

	// Table holds the table name of the configpoint in the database.
	Table = "config_point"
)

// Columns holds all SQL columns for configpoint fields.
var Columns = []string{
	FieldID,
	FieldTransactionName,
	FieldTransactionType,
	FieldPaymentChannel,
	FieldPaymentType,
	FieldDummyWallet,
	FieldAmount,
	FieldPoint,
	FieldExpire,
	FieldUpdateDate,
	FieldExpireDate,
	FieldStatusTransaction,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TransactionNameValidator is a validator for the "TransactionName" field. It is called by the builders before save.
	TransactionNameValidator func(string) error
	// TransactionTypeValidator is a validator for the "TransactionType" field. It is called by the builders before save.
	TransactionTypeValidator func(string) error
	// PaymentChannelValidator is a validator for the "PaymentChannel" field. It is called by the builders before save.
	PaymentChannelValidator func(string) error
	// PaymentTypeValidator is a validator for the "PaymentType" field. It is called by the builders before save.
	PaymentTypeValidator func(string) error
	// DummyWalletValidator is a validator for the "DummyWallet" field. It is called by the builders before save.
	DummyWalletValidator func(string) error
	// StatusTransactionValidator is a validator for the "StatusTransaction" field. It is called by the builders before save.
	StatusTransactionValidator func(string) error
)
