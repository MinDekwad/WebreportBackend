// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentKycColumns holds the columns for the "agent_kyc" table.
	AgentKycColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "KYCDate", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "KYCTime", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AgentID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Agentemail", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AgentNameLastname", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "KYCStatus", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Consumerwalletid", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "KYCRespond", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DOPARespond", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AgentType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// AgentKycTable holds the schema information for the "agent_kyc" table.
	AgentKycTable = &schema.Table{
		Name:        "agent_kyc",
		Columns:     AgentKycColumns,
		PrimaryKey:  []*schema.Column{AgentKycColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AgentTypeColumns holds the columns for the "agent_type" table.
	AgentTypeColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "agentid", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "agentname", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "agenttype", Type: field.TypeString, Nullable: true, Size: 45},
	}
	// AgentTypeTable holds the schema information for the "agent_type" table.
	AgentTypeTable = &schema.Table{
		Name:        "agent_type",
		Columns:     AgentTypeColumns,
		PrimaryKey:  []*schema.Column{AgentTypeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AreaHistoryColumns holds the columns for the "area_history" table.
	AreaHistoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Size: 45},
		{Name: "ProvinceNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DistrictNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "SubDistrict", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "RankArea", Type: field.TypeInt, Nullable: true},
		{Name: "DateCalRank", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// AreaHistoryTable holds the schema information for the "area_history" table.
	AreaHistoryTable = &schema.Table{
		Name:        "area_history",
		Columns:     AreaHistoryColumns,
		PrimaryKey:  []*schema.Column{AreaHistoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BankDetailColumns holds the columns for the "bank_detail" table.
	BankDetailColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "Bank_AccountNo", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Bank_Name", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Bank_AccountName", Type: field.TypeString, Nullable: true, Size: 45},
	}
	// BankDetailTable holds the schema information for the "bank_detail" table.
	BankDetailTable = &schema.Table{
		Name:        "bank_detail",
		Columns:     BankDetailColumns,
		PrimaryKey:  []*schema.Column{BankDetailColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// BulktransactionColumns holds the columns for the "bulktransaction" table.
	BulktransactionColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "BulkCreditSameday", Type: field.TypeFloat64, Nullable: true},
		{Name: "BulkCreditSamedayFee", Type: field.TypeFloat64, Nullable: true},
		{Name: "Transfertobankaccount", Type: field.TypeFloat64, Nullable: true},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// BulktransactionTable holds the schema information for the "bulktransaction" table.
	BulktransactionTable = &schema.Table{
		Name:        "bulktransaction",
		Columns:     BulktransactionColumns,
		PrimaryKey:  []*schema.Column{BulktransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CofigAreaColumns holds the columns for the "cofig_area" table.
	CofigAreaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "ProvinceID", Type: field.TypeInt, Nullable: true},
		{Name: "ProvinceNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DistrictID", Type: field.TypeInt, Nullable: true},
		{Name: "DistrictNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DistrictNameEN", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Rank", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "RankTmp", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "ZipCode", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "SubDistrictNameTH", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "ApproveBy", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "ApproveDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// CofigAreaTable holds the schema information for the "cofig_area" table.
	CofigAreaTable = &schema.Table{
		Name:        "cofig_area",
		Columns:     CofigAreaColumns,
		PrimaryKey:  []*schema.Column{CofigAreaColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ConfigDateCalculateRankColumns holds the columns for the "config_date_calculate_rank" table.
	ConfigDateCalculateRankColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "Rank", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "NumDateCalculateRank", Type: field.TypeInt, Nullable: true},
		{Name: "NumDateCalculateRankTmp", Type: field.TypeString, Nullable: true, Size: 11},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ConfigDateCalculateRankTable holds the schema information for the "config_date_calculate_rank" table.
	ConfigDateCalculateRankTable = &schema.Table{
		Name:        "config_date_calculate_rank",
		Columns:     ConfigDateCalculateRankColumns,
		PrimaryKey:  []*schema.Column{ConfigDateCalculateRankColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ConfigOccupationColumns holds the columns for the "config_occupation" table.
	ConfigOccupationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "OccupationName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Rank", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "RankTmp", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "ApproveBy", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "ApproveDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ConfigOccupationTable holds the schema information for the "config_occupation" table.
	ConfigOccupationTable = &schema.Table{
		Name:        "config_occupation",
		Columns:     ConfigOccupationColumns,
		PrimaryKey:  []*schema.Column{ConfigOccupationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ConfigPointColumns holds the columns for the "config_point" table.
	ConfigPointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "TransactionName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "TransactionType", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PaymentChannel", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PaymentType", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DummyWallet", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Amount", Type: field.TypeInt, Nullable: true},
		{Name: "Point", Type: field.TypeInt, Nullable: true},
		{Name: "Expire", Type: field.TypeInt, Nullable: true},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "ExpireDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "StatusTransaction", Type: field.TypeString, Nullable: true, Size: 10},
	}
	// ConfigPointTable holds the schema information for the "config_point" table.
	ConfigPointTable = &schema.Table{
		Name:        "config_point",
		Columns:     ConfigPointColumns,
		PrimaryKey:  []*schema.Column{ConfigPointColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ConsumerTransactionColumns holds the columns for the "consumer_transaction" table.
	ConsumerTransactionColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "TransactionID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TransactionStatus", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TransactionType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PaymentChannel", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PaymentType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TypeCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ApprovalCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "BillerID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ref1", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ref2", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ref3", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "fee", Type: field.TypeFloat64, Nullable: true},
		{Name: "total", Type: field.TypeFloat64, Nullable: true},
		{Name: "FromReference", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "FromPhoneNo", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "FromName", Type: field.TypeString, Nullable: true, Size: 250},
		{Name: "ToAccount", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ToAccountPhoneNo", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ToAccountName", Type: field.TypeString, Nullable: true, Size: 250},
		{Name: "BankCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TerminalId", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TerminalType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ToAccount105", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "FromReference105", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "PartnerRef", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "ResponseCode", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "ResponseDescription", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// ConsumerTransactionTable holds the schema information for the "consumer_transaction" table.
	ConsumerTransactionTable = &schema.Table{
		Name:        "consumer_transaction",
		Columns:     ConsumerTransactionColumns,
		PrimaryKey:  []*schema.Column{ConsumerTransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FileimportColumns holds the columns for the "fileimport" table.
	FileimportColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "filename", Type: field.TypeString, Nullable: true, Size: 150},
		{Name: "filetype", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "importdate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "status", Type: field.TypeString, Nullable: true, Size: 10},
	}
	// FileimportTable holds the schema information for the "fileimport" table.
	FileimportTable = &schema.Table{
		Name:        "fileimport",
		Columns:     FileimportColumns,
		PrimaryKey:  []*schema.Column{FileimportColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FileinsertColumns holds the columns for the "fileinsert" table.
	FileinsertColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 150},
		{Name: "importdate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "IsSuccess", Type: field.TypeBool, Nullable: true},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// FileinsertTable holds the schema information for the "fileinsert" table.
	FileinsertTable = &schema.Table{
		Name:        "fileinsert",
		Columns:     FileinsertColumns,
		PrimaryKey:  []*schema.Column{FileinsertColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LimitPointColumns holds the columns for the "limit_point" table.
	LimitPointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "LimitPoint", Type: field.TypeInt, Nullable: true},
	}
	// LimitPointTable holds the schema information for the "limit_point" table.
	LimitPointTable = &schema.Table{
		Name:        "limit_point",
		Columns:     LimitPointColumns,
		PrimaryKey:  []*schema.Column{LimitPointColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WalletLoanbindingColumns holds the columns for the "wallet_loanbinding" table.
	WalletLoanbindingColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "Status", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "WalletId", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AccountReference", Type: field.TypeString, Nullable: true, Size: 150},
		{Name: "LoanAccountNo", Type: field.TypeString, Nullable: true, Size: 150},
		{Name: "RequestDateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// WalletLoanbindingTable holds the schema information for the "wallet_loanbinding" table.
	WalletLoanbindingTable = &schema.Table{
		Name:        "wallet_loanbinding",
		Columns:     WalletLoanbindingColumns,
		PrimaryKey:  []*schema.Column{WalletLoanbindingColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LogExportColumns holds the columns for the "log_export" table.
	LogExportColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "UserName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "FileName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "ExportDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "ExportDate"}},
	}
	// LogExportTable holds the schema information for the "log_export" table.
	LogExportTable = &schema.Table{
		Name:        "log_export",
		Columns:     LogExportColumns,
		PrimaryKey:  []*schema.Column{LogExportColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MerchantTransactionColumns holds the columns for the "merchant_transaction" table.
	MerchantTransactionColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "TransactionID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "Amount", Type: field.TypeFloat64, Nullable: true},
		{Name: "PaymentType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PaymentChannel", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Status", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "MerchantID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "TerminalID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "MerchantFullName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "FromAccount", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "SettlementAccount", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "MDR_FEETHB", Type: field.TypeFloat64, Nullable: true},
		{Name: "TransactionFEETHB", Type: field.TypeFloat64, Nullable: true},
		{Name: "TotalFeeincVAT", Type: field.TypeFloat64, Nullable: true},
		{Name: "VATTHB", Type: field.TypeFloat64, Nullable: true},
		{Name: "TotalFeeExcVAT", Type: field.TypeFloat64, Nullable: true},
		{Name: "WHTTHB", Type: field.TypeFloat64, Nullable: true},
		{Name: "NetPayTHB", Type: field.TypeFloat64, Nullable: true},
		{Name: "TransactionType", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "BankCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// MerchantTransactionTable holds the schema information for the "merchant_transaction" table.
	MerchantTransactionTable = &schema.Table{
		Name:        "merchant_transaction",
		Columns:     MerchantTransactionColumns,
		PrimaryKey:  []*schema.Column{MerchantTransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OccupationHistoryColumns holds the columns for the "occupation_history" table.
	OccupationHistoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Size: 45},
		{Name: "OccupationName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "RankOccupation", Type: field.TypeInt, Nullable: true},
		{Name: "DateCalRank", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// OccupationHistoryTable holds the schema information for the "occupation_history" table.
	OccupationHistoryTable = &schema.Table{
		Name:        "occupation_history",
		Columns:     OccupationHistoryColumns,
		PrimaryKey:  []*schema.Column{OccupationHistoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PendingKycColumns holds the columns for the "pending_kyc" table.
	PendingKycColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "AgentID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AgentNameLastname", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "KYCDate", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DateGen", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "StatusGen", Type: field.TypeBool, Nullable: true},
		{Name: "Point", Type: field.TypeInt, Nullable: true},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// PendingKycTable holds the schema information for the "pending_kyc" table.
	PendingKycTable = &schema.Table{
		Name:        "pending_kyc",
		Columns:     PendingKycColumns,
		PrimaryKey:  []*schema.Column{PendingKycColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PendingLoanBindingColumns holds the columns for the "pending_loan_binding" table.
	PendingLoanBindingColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "NameLB", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "StatusGenLB", Type: field.TypeBool, Nullable: true},
		{Name: "PointLB", Type: field.TypeInt, Nullable: true},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "DateGenLB", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
		{Name: "CAWalletID", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "CAPort", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "MainBranch", Type: field.TypeString, Nullable: true, Size: 255},
	}
	// PendingLoanBindingTable holds the schema information for the "pending_loan_binding" table.
	PendingLoanBindingTable = &schema.Table{
		Name:        "pending_loan_binding",
		Columns:     PendingLoanBindingColumns,
		PrimaryKey:  []*schema.Column{PendingLoanBindingColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PointCsvColumns holds the columns for the "point_csv" table.
	PointCsvColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "CreateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "Adjustamount", Type: field.TypeInt, Nullable: true},
		{Name: "Note", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PointTranDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "ActionExport", Type: field.TypeInt, Nullable: true},
	}
	// PointCsvTable holds the schema information for the "point_csv" table.
	PointCsvTable = &schema.Table{
		Name:        "point_csv",
		Columns:     PointCsvColumns,
		PrimaryKey:  []*schema.Column{PointCsvColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PointKycRvColumns holds the columns for the "point_kyc_rv" table.
	PointKycRvColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "DateTimeGen", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "StatusGen", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "KYCDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "RVDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "Type", Type: field.TypeString, Nullable: true, Size: 3},
		{Name: "Point", Type: field.TypeInt, Nullable: true},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// PointKycRvTable holds the schema information for the "point_kyc_rv" table.
	PointKycRvTable = &schema.Table{
		Name:        "point_kyc_rv",
		Columns:     PointKycRvColumns,
		PrimaryKey:  []*schema.Column{PointKycRvColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PointPendingKycTransactionColumns holds the columns for the "point_pending_kyc_transaction" table.
	PointPendingKycTransactionColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "WalletId", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Point", Type: field.TypeInt, Nullable: true},
		{Name: "DateExport", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "DateGen", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "Note", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "StatusExport", Type: field.TypeBool, Nullable: true},
		{Name: "KYCDate", Type: field.TypeString, Nullable: true, Size: 45},
	}
	// PointPendingKycTransactionTable holds the schema information for the "point_pending_kyc_transaction" table.
	PointPendingKycTransactionTable = &schema.Table{
		Name:        "point_pending_kyc_transaction",
		Columns:     PointPendingKycTransactionColumns,
		PrimaryKey:  []*schema.Column{PointPendingKycTransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PointPendingLbTransactionColumns holds the columns for the "point_pending_lb_transaction" table.
	PointPendingLbTransactionColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PointLB", Type: field.TypeInt, Nullable: true},
		{Name: "DateExportLB", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "DateGenLB", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "NoteLB", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "StatusExportLB", Type: field.TypeBool, Nullable: true},
		{Name: "LBDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// PointPendingLbTransactionTable holds the schema information for the "point_pending_lb_transaction" table.
	PointPendingLbTransactionTable = &schema.Table{
		Name:        "point_pending_lb_transaction",
		Columns:     PointPendingLbTransactionColumns,
		PrimaryKey:  []*schema.Column{PointPendingLbTransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PointTransactionColumns holds the columns for the "point_transaction" table.
	PointTransactionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "Date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "WalletID", Type: field.TypeString, Nullable: true, Size: 225},
		{Name: "TransactionName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Point", Type: field.TypeInt, Nullable: true},
		{Name: "Reference", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// PointTransactionTable holds the schema information for the "point_transaction" table.
	PointTransactionTable = &schema.Table{
		Name:        "point_transaction",
		Columns:     PointTransactionColumns,
		PrimaryKey:  []*schema.Column{PointTransactionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RankingColumns holds the columns for the "ranking" table.
	RankingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Size: 45},
		{Name: "Name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "TaxID", Type: field.TypeString, Nullable: true, Size: 13},
		{Name: "ProvinceNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DistrictNameTH", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "DistrictNameEN", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "OccupationName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "LastRank", Type: field.TypeInt, Nullable: true},
		{Name: "CurrentRank", Type: field.TypeInt, Nullable: true},
		{Name: "StatusRanking", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "LastDateCalRank", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "NextDateCalRank", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "StateCal", Type: field.TypeInt, Nullable: true},
		{Name: "ZipCode", Type: field.TypeString, Nullable: true, Size: 5},
		{Name: "TransactionFactorRank", Type: field.TypeInt, Nullable: true},
		{Name: "RegisDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "SubDistrict", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Phoneno", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AddressDetail", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Street", Type: field.TypeString, Nullable: true, Size: 255},
	}
	// RankingTable holds the schema information for the "ranking" table.
	RankingTable = &schema.Table{
		Name:        "ranking",
		Columns:     RankingColumns,
		PrimaryKey:  []*schema.Column{RankingColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WalletDailyColumns holds the columns for the "wallet_daily" table.
	WalletDailyColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Size: 45},
		{Name: "WalletTypeName", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "WalletPhoneno", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "WalletName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "CitizenId", Type: field.TypeString, Nullable: true, Size: 13},
		{Name: "Status", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "DateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "Balance", Type: field.TypeFloat64, Nullable: true},
		{Name: "Email", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "IsForgetPin", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "ATMCard", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AccountNo", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AddressDetail", Type: field.TypeString, Nullable: true},
		{Name: "Street", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "District", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "SubDistrict", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Province", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PostalCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "RegisterDateTime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// WalletDailyTable holds the schema information for the "wallet_daily" table.
	WalletDailyTable = &schema.Table{
		Name:        "wallet_daily",
		Columns:     WalletDailyColumns,
		PrimaryKey:  []*schema.Column{WalletDailyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ReportWalletColumns holds the columns for the "report_wallet" table.
	ReportWalletColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "walletid", Type: field.TypeString, Size: 45},
		{Name: "WalletTypeName", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "WalletPhoneno", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "WalletName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "CitizenId", Type: field.TypeString, Nullable: true, Size: 13},
		{Name: "Status", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "RegisterDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "GroupUser", Type: field.TypeInt, Nullable: true},
		{Name: "UserAgent", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "KYC_Date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "ATMCard", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AccountNo", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "AddressDetail", Type: field.TypeString, Nullable: true},
		{Name: "Street", Type: field.TypeString, Nullable: true},
		{Name: "District", Type: field.TypeString, Nullable: true},
		{Name: "SubDistrict", Type: field.TypeString, Nullable: true},
		{Name: "Province", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "PostalCode", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "isKYC", Type: field.TypeString, Nullable: true, Size: 1},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// ReportWalletTable holds the schema information for the "report_wallet" table.
	ReportWalletTable = &schema.Table{
		Name:        "report_wallet",
		Columns:     ReportWalletColumns,
		PrimaryKey:  []*schema.Column{ReportWalletColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// StatementEndingBalanceColumns holds the columns for the "statement_ending_balance" table.
	StatementEndingBalanceColumns = []*schema.Column{
		{Name: "uid", Type: field.TypeInt, Increment: true},
		{Name: "Statement_Balance", Type: field.TypeFloat64, Nullable: true},
		{Name: "Statement_Date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "Statement_Date"}},
		{Name: "Bank_UID", Type: field.TypeInt, Nullable: true},
	}
	// StatementEndingBalanceTable holds the schema information for the "statement_ending_balance" table.
	StatementEndingBalanceTable = &schema.Table{
		Name:       "statement_ending_balance",
		Columns:    StatementEndingBalanceColumns,
		PrimaryKey: []*schema.Column{StatementEndingBalanceColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "statement_ending_balance_bank_detail_statements",
				Columns: []*schema.Column{StatementEndingBalanceColumns[3]},

				RefColumns: []*schema.Column{BankDetailColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionFactorColumns holds the columns for the "transaction_factor" table.
	TransactionFactorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "TransactionFactorName", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "TransactionType", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PaymentChannel", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PaymentType", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "NumDay", Type: field.TypeInt, Nullable: true},
		{Name: "Date", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "UpdateDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "StatusApprove", Type: field.TypeString, Nullable: true, Size: 10},
	}
	// TransactionFactorTable holds the schema information for the "transaction_factor" table.
	TransactionFactorTable = &schema.Table{
		Name:        "transaction_factor",
		Columns:     TransactionFactorColumns,
		PrimaryKey:  []*schema.Column{TransactionFactorColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TransactionFactorHistoryColumns holds the columns for the "transaction_factor_history" table.
	TransactionFactorHistoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "WalletID", Type: field.TypeString, Size: 45},
		{Name: "RankTransactionFactor", Type: field.TypeInt, Nullable: true},
		{Name: "DateCalRank", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "TransactionFactorID", Type: field.TypeInt, Nullable: true},
	}
	// TransactionFactorHistoryTable holds the schema information for the "transaction_factor_history" table.
	TransactionFactorHistoryTable = &schema.Table{
		Name:       "transaction_factor_history",
		Columns:    TransactionFactorHistoryColumns,
		PrimaryKey: []*schema.Column{TransactionFactorHistoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "transaction_factor_history_transaction_factor_transactionhistory",
				Columns: []*schema.Column{TransactionFactorHistoryColumns[4]},

				RefColumns: []*schema.Column{TransactionFactorColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionFactorItemColumns holds the columns for the "transaction_factor_item" table.
	TransactionFactorItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "TransactionFactorID", Type: field.TypeInt, Nullable: true},
		{Name: "Min", Type: field.TypeFloat64, Nullable: true},
		{Name: "Max", Type: field.TypeFloat64, Nullable: true},
		{Name: "Rank", Type: field.TypeInt, Nullable: true},
	}
	// TransactionFactorItemTable holds the schema information for the "transaction_factor_item" table.
	TransactionFactorItemTable = &schema.Table{
		Name:        "transaction_factor_item",
		Columns:     TransactionFactorItemColumns,
		PrimaryKey:  []*schema.Column{TransactionFactorItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TransactionFactorItemTmpColumns holds the columns for the "transaction_factor_item_tmp" table.
	TransactionFactorItemTmpColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "Min", Type: field.TypeFloat64, Nullable: true},
		{Name: "Max", Type: field.TypeFloat64, Nullable: true},
		{Name: "Rank", Type: field.TypeInt, Nullable: true},
	}
	// TransactionFactorItemTmpTable holds the schema information for the "transaction_factor_item_tmp" table.
	TransactionFactorItemTmpTable = &schema.Table{
		Name:        "transaction_factor_item_tmp",
		Columns:     TransactionFactorItemTmpColumns,
		PrimaryKey:  []*schema.Column{TransactionFactorItemTmpColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserProfileColumns holds the columns for the "user_profile" table.
	UserProfileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "UserId", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Firstname", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "Lastname", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "PhoneNo", Type: field.TypeString, Nullable: true, Size: 15},
		{Name: "Email", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "CitizenId", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "BirthDate", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "Gender", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "BusinessAddress", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "OccupationId", Type: field.TypeInt, Nullable: true},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
	}
	// UserProfileTable holds the schema information for the "user_profile" table.
	UserProfileTable = &schema.Table{
		Name:        "user_profile",
		Columns:     UserProfileColumns,
		PrimaryKey:  []*schema.Column{UserProfileColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}

	// WatchlistColumns holds the columns for the "watchlist" table.
	WatchlistColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "Name", Type: field.TypeString, Size: 255},
		{Name: "TaxID", Type: field.TypeString, Size: 20},
		{Name: "RankWatchlist", Type: field.TypeInt, Nullable: true},
		{Name: "FileimportID", Type: field.TypeInt, Nullable: true},
		{Name: "IsDeleted", Type: field.TypeBool, Nullable: true},
		{Name: "ImportDate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "UserUpload", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "TypeID", Type: field.TypeInt, Nullable: true},
	}
	// WatchlistTable holds the schema information for the "watchlist" table.
	WatchlistTable = &schema.Table{
		Name:       "watchlist",
		Columns:    WatchlistColumns,
		PrimaryKey: []*schema.Column{WatchlistColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "watchlist_watchlist_type_watchlist",
				Columns: []*schema.Column{WatchlistColumns[8]},

				RefColumns: []*schema.Column{WatchlistTypeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WatchlistHistoryColumns holds the columns for the "watchlist_history" table.
	WatchlistHistoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "Name", Type: field.TypeString, Size: 255},
		{Name: "TaxID", Type: field.TypeString, Size: 13},
		{Name: "TypeName", Type: field.TypeString, Size: 255},
		{Name: "RankWatchlist", Type: field.TypeInt, Nullable: true},
		{Name: "StatusDel", Type: field.TypeInt, Nullable: true},
		{Name: "DateCalRank", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// WatchlistHistoryTable holds the schema information for the "watchlist_history" table.
	WatchlistHistoryTable = &schema.Table{
		Name:        "watchlist_history",
		Columns:     WatchlistHistoryColumns,
		PrimaryKey:  []*schema.Column{WatchlistHistoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WatchlistTypeColumns holds the columns for the "watchlist_type" table.
	WatchlistTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "TypeID", Type: field.TypeInt, Nullable: true},
		{Name: "TypeName", Type: field.TypeString, Size: 255},
		{Name: "TypeDescription", Type: field.TypeString, Size: 255},
	}
	// WatchlistTypeTable holds the schema information for the "watchlist_type" table.
	WatchlistTypeTable = &schema.Table{
		Name:        "watchlist_type",
		Columns:     WatchlistTypeColumns,
		PrimaryKey:  []*schema.Column{WatchlistTypeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LogColumns holds the columns for the "log" table.
	LogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "admin_id", Type: field.TypeInt},
		{Name: "resource", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "actions", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "created_at"}},
	}
	// LogTable holds the schema information for the "log" table.
	LogTable = &schema.Table{
		Name:        "log",
		Columns:     LogColumns,
		PrimaryKey:  []*schema.Column{LogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentKycTable,
		AgentTypeTable,
		AreaHistoryTable,
		BankDetailTable,
		BulktransactionTable,
		CofigAreaTable,
		ConfigDateCalculateRankTable,
		ConfigOccupationTable,
		ConfigPointTable,
		ConsumerTransactionTable,
		FileimportTable,
		FileinsertTable,
		LimitPointTable,
		WalletLoanbindingTable,
		LogExportTable,
		MerchantTransactionTable,
		OccupationHistoryTable,
		PendingKycTable,
		PendingLoanBindingTable,
		PointCsvTable,
		PointKycRvTable,
		PointPendingKycTransactionTable,
		PointPendingLbTransactionTable,
		PointTransactionTable,
		RankingTable,
		WalletDailyTable,
		ReportWalletTable,
		StatementEndingBalanceTable,
		TransactionFactorTable,
		TransactionFactorHistoryTable,
		TransactionFactorItemTable,
		TransactionFactorItemTmpTable,
		UserProfileTable,
		ReportWalletTable,
		WatchlistTable,
		WatchlistHistoryTable,
		WatchlistTypeTable,
		LogTable,
	}
)

func init() {
	AgentKycTable.Annotation = &entsql.Annotation{
		Table: "agent_kyc",
	}
	AgentTypeTable.Annotation = &entsql.Annotation{
		Table: "agent_type",
	}
	AreaHistoryTable.Annotation = &entsql.Annotation{
		Table: "area_history",
	}
	BankDetailTable.Annotation = &entsql.Annotation{
		Table: "bank_detail",
	}
	BulktransactionTable.Annotation = &entsql.Annotation{
		Table: "bulktransaction",
	}
	CofigAreaTable.Annotation = &entsql.Annotation{
		Table: "cofig_area",
	}
	ConfigDateCalculateRankTable.Annotation = &entsql.Annotation{
		Table: "config_date_calculate_rank",
	}
	ConfigOccupationTable.Annotation = &entsql.Annotation{
		Table: "config_occupation",
	}
	ConfigPointTable.Annotation = &entsql.Annotation{
		Table: "config_point",
	}
	ConsumerTransactionTable.Annotation = &entsql.Annotation{
		Table: "consumer_transaction",
	}
	FileimportTable.Annotation = &entsql.Annotation{
		Table: "fileimport",
	}
	FileinsertTable.Annotation = &entsql.Annotation{
		Table: "fileinsert",
	}
	LimitPointTable.Annotation = &entsql.Annotation{
		Table: "limit_point",
	}
	WalletLoanbindingTable.Annotation = &entsql.Annotation{
		Table: "wallet_loanbinding",
	}
	LogExportTable.Annotation = &entsql.Annotation{
		Table: "log_export",
	}
	MerchantTransactionTable.Annotation = &entsql.Annotation{
		Table: "merchant_transaction",
	}
	OccupationHistoryTable.Annotation = &entsql.Annotation{
		Table: "occupation_history",
	}
	PendingKycTable.Annotation = &entsql.Annotation{
		Table: "pending_kyc",
	}
	PendingLoanBindingTable.Annotation = &entsql.Annotation{
		Table: "pending_loan_binding",
	}
	PointCsvTable.Annotation = &entsql.Annotation{
		Table: "point_csv",
	}
	PointKycRvTable.Annotation = &entsql.Annotation{
		Table: "point_kyc_rv",
	}
	PointPendingKycTransactionTable.Annotation = &entsql.Annotation{
		Table: "point_pending_kyc_transaction",
	}
	PointPendingLbTransactionTable.Annotation = &entsql.Annotation{
		Table: "point_pending_lb_transaction",
	}
	PointTransactionTable.Annotation = &entsql.Annotation{
		Table: "point_transaction",
	}
	RankingTable.Annotation = &entsql.Annotation{
		Table: "ranking",
	}
	WalletDailyTable.Annotation = &entsql.Annotation{
		Table: "wallet_daily",
	}
	ReportWalletTable.Annotation = &entsql.Annotation{
		Table: "report_wallet",
	}
	StatementEndingBalanceTable.ForeignKeys[0].RefTable = BankDetailTable
	StatementEndingBalanceTable.Annotation = &entsql.Annotation{
		Table: "statement_ending_balance",
	}
	TransactionFactorTable.Annotation = &entsql.Annotation{
		Table: "transaction_factor",
	}
	TransactionFactorHistoryTable.ForeignKeys[0].RefTable = TransactionFactorTable
	TransactionFactorHistoryTable.Annotation = &entsql.Annotation{
		Table: "transaction_factor_history",
	}
	TransactionFactorItemTable.Annotation = &entsql.Annotation{
		Table: "transaction_factor_item",
	}
	TransactionFactorItemTmpTable.Annotation = &entsql.Annotation{
		Table: "transaction_factor_item_tmp",
	}
	UserProfileTable.Annotation = &entsql.Annotation{
		Table: "user_profile",
	}
	ReportWalletTable.Annotation = &entsql.Annotation{
		Table: "report_wallet",
	}
	WatchlistTable.ForeignKeys[0].RefTable = WatchlistTypeTable
	WatchlistTable.Annotation = &entsql.Annotation{
		Table: "watchlist",
	}
	WatchlistHistoryTable.Annotation = &entsql.Annotation{
		Table: "watchlist_history",
	}
	WatchlistTypeTable.Annotation = &entsql.Annotation{
		Table: "watchlist_type",
	}
	LogTable.Annotation = &entsql.Annotation{
		Table: "log",
	}
}
