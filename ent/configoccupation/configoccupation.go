// Code generated by entc, DO NOT EDIT.

package configoccupation

const (
	// Label holds the string label denoting the configoccupation type in the database.
	Label = "configoccupation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOccupationName holds the string denoting the occupationname field in the database.
	FieldOccupationName = "OccupationName"
	// FieldRank holds the string denoting the rank field in the database.
	FieldRank = "Rank"
	// FieldRankTmp holds the string denoting the ranktmp field in the database.
	FieldRankTmp = "RankTmp"
	// FieldUpdateDate holds the string denoting the updatedate field in the database.
	FieldUpdateDate = "UpdateDate"
	// FieldApproveBy holds the string denoting the approveby field in the database.
	FieldApproveBy = "ApproveBy"
	// FieldApproveDate holds the string denoting the approvedate field in the database.
	FieldApproveDate = "ApproveDate"

	// Table holds the table name of the configoccupation in the database.
	Table = "config_occupation"
)

// Columns holds all SQL columns for configoccupation fields.
var Columns = []string{
	FieldID,
	FieldOccupationName,
	FieldRank,
	FieldRankTmp,
	FieldUpdateDate,
	FieldApproveBy,
	FieldApproveDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// OccupationNameValidator is a validator for the "OccupationName" field. It is called by the builders before save.
	OccupationNameValidator func(string) error
	// RankValidator is a validator for the "Rank" field. It is called by the builders before save.
	RankValidator func(string) error
	// RankTmpValidator is a validator for the "RankTmp" field. It is called by the builders before save.
	RankTmpValidator func(string) error
	// ApproveByValidator is a validator for the "ApproveBy" field. It is called by the builders before save.
	ApproveByValidator func(string) error
)
