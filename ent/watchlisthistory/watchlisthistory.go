// Code generated by entc, DO NOT EDIT.

package watchlisthistory

const (
	// Label holds the string label denoting the watchlisthistory type in the database.
	Label = "watchlisthistory"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "Name"
	// FieldTaxID holds the string denoting the taxid field in the database.
	FieldTaxID = "TaxID"
	// FieldTypeName holds the string denoting the typename field in the database.
	FieldTypeName = "TypeName"
	// FieldRankWatchlist holds the string denoting the rankwatchlist field in the database.
	FieldRankWatchlist = "RankWatchlist"
	// FieldStatusDel holds the string denoting the statusdel field in the database.
	FieldStatusDel = "StatusDel"
	// FieldDateCalRank holds the string denoting the datecalrank field in the database.
	FieldDateCalRank = "DateCalRank"

	// Table holds the table name of the watchlisthistory in the database.
	Table = "watchlist_history"
)

// Columns holds all SQL columns for watchlisthistory fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldTaxID,
	FieldTypeName,
	FieldRankWatchlist,
	FieldStatusDel,
	FieldDateCalRank,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
	// TaxIDValidator is a validator for the "TaxID" field. It is called by the builders before save.
	TaxIDValidator func(string) error
	// TypeNameValidator is a validator for the "TypeName" field. It is called by the builders before save.
	TypeNameValidator func(string) error
)
