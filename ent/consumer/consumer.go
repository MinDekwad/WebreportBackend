// Code generated by entc, DO NOT EDIT.

package consumer

const (
	// Label holds the string label denoting the consumer type in the database.
	Label = "consumer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "uid"
	// FieldTransactionID holds the string denoting the transaction_id field in the database.
	FieldTransactionID = "TransactionID"
	// FieldTransactionStatus holds the string denoting the transactionstatus field in the database.
	FieldTransactionStatus = "TransactionStatus"
	// FieldTransactionType holds the string denoting the transactiontype field in the database.
	FieldTransactionType = "TransactionType"
	// FieldPaymentChannel holds the string denoting the paymentchannel field in the database.
	FieldPaymentChannel = "PaymentChannel"
	// FieldPaymentType holds the string denoting the paymenttype field in the database.
	FieldPaymentType = "PaymentType"
	// FieldTypeCode holds the string denoting the typecode field in the database.
	FieldTypeCode = "TypeCode"
	// FieldApprovalCode holds the string denoting the approvalcode field in the database.
	FieldApprovalCode = "ApprovalCode"
	// FieldBillerID holds the string denoting the billerid field in the database.
	FieldBillerID = "BillerID"
	// FieldRef1 holds the string denoting the ref1 field in the database.
	FieldRef1 = "ref1"
	// FieldRef2 holds the string denoting the ref2 field in the database.
	FieldRef2 = "ref2"
	// FieldRef3 holds the string denoting the ref3 field in the database.
	FieldRef3 = "ref3"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "Amount"
	// FieldFee holds the string denoting the fee field in the database.
	FieldFee = "fee"
	// FieldTotal holds the string denoting the total field in the database.
	FieldTotal = "total"
	// FieldFromReference holds the string denoting the fromreference field in the database.
	FieldFromReference = "FromReference"
	// FieldFromPhoneNo holds the string denoting the fromphoneno field in the database.
	FieldFromPhoneNo = "FromPhoneNo"
	// FieldFromName holds the string denoting the fromname field in the database.
	FieldFromName = "FromName"
	// FieldToAccount holds the string denoting the toaccount field in the database.
	FieldToAccount = "ToAccount"
	// FieldToAccountPhoneNo holds the string denoting the toaccountphoneno field in the database.
	FieldToAccountPhoneNo = "ToAccountPhoneNo"
	// FieldToAccountName holds the string denoting the toaccountname field in the database.
	FieldToAccountName = "ToAccountName"
	// FieldBankCode holds the string denoting the bankcode field in the database.
	FieldBankCode = "BankCode"
	// FieldTerminalId holds the string denoting the terminalid field in the database.
	FieldTerminalId = "TerminalId"
	// FieldTerminalType holds the string denoting the terminaltype field in the database.
	FieldTerminalType = "TerminalType"
	// FieldToAccount105 holds the string denoting the toaccount105 field in the database.
	FieldToAccount105 = "ToAccount105"
	// FieldFromReference105 holds the string denoting the fromreference105 field in the database.
	FieldFromReference105 = "FromReference105"
	// FieldDateTime holds the string denoting the datetime field in the database.
	FieldDateTime = "DateTime"
	// FieldPartnerRef holds the string denoting the partnerref field in the database.
	FieldPartnerRef = "PartnerRef"
	// FieldResponseCode holds the string denoting the responsecode field in the database.
	FieldResponseCode = "ResponseCode"
	// FieldResponseDescription holds the string denoting the responsedescription field in the database.
	FieldResponseDescription = "ResponseDescription"
	// FieldFileimportID holds the string denoting the fileimportid field in the database.
	FieldFileimportID = "FileimportID"

	// Table holds the table name of the consumer in the database.
	Table = "consumer_transaction"
)

// Columns holds all SQL columns for consumer fields.
var Columns = []string{
	FieldID,
	FieldTransactionID,
	FieldTransactionStatus,
	FieldTransactionType,
	FieldPaymentChannel,
	FieldPaymentType,
	FieldTypeCode,
	FieldApprovalCode,
	FieldBillerID,
	FieldRef1,
	FieldRef2,
	FieldRef3,
	FieldAmount,
	FieldFee,
	FieldTotal,
	FieldFromReference,
	FieldFromPhoneNo,
	FieldFromName,
	FieldToAccount,
	FieldToAccountPhoneNo,
	FieldToAccountName,
	FieldBankCode,
	FieldTerminalId,
	FieldTerminalType,
	FieldToAccount105,
	FieldFromReference105,
	FieldDateTime,
	FieldPartnerRef,
	FieldResponseCode,
	FieldResponseDescription,
	FieldFileimportID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TransactionIDValidator is a validator for the "transaction_id" field. It is called by the builders before save.
	TransactionIDValidator func(string) error
	// TransactionStatusValidator is a validator for the "TransactionStatus" field. It is called by the builders before save.
	TransactionStatusValidator func(string) error
	// TransactionTypeValidator is a validator for the "TransactionType" field. It is called by the builders before save.
	TransactionTypeValidator func(string) error
	// PaymentChannelValidator is a validator for the "PaymentChannel" field. It is called by the builders before save.
	PaymentChannelValidator func(string) error
	// PaymentTypeValidator is a validator for the "PaymentType" field. It is called by the builders before save.
	PaymentTypeValidator func(string) error
	// TypeCodeValidator is a validator for the "TypeCode" field. It is called by the builders before save.
	TypeCodeValidator func(string) error
	// ApprovalCodeValidator is a validator for the "ApprovalCode" field. It is called by the builders before save.
	ApprovalCodeValidator func(string) error
	// BillerIDValidator is a validator for the "BillerID" field. It is called by the builders before save.
	BillerIDValidator func(string) error
	// Ref1Validator is a validator for the "ref1" field. It is called by the builders before save.
	Ref1Validator func(string) error
	// Ref2Validator is a validator for the "ref2" field. It is called by the builders before save.
	Ref2Validator func(string) error
	// Ref3Validator is a validator for the "ref3" field. It is called by the builders before save.
	Ref3Validator func(string) error
	// FromReferenceValidator is a validator for the "FromReference" field. It is called by the builders before save.
	FromReferenceValidator func(string) error
	// FromPhoneNoValidator is a validator for the "FromPhoneNo" field. It is called by the builders before save.
	FromPhoneNoValidator func(string) error
	// FromNameValidator is a validator for the "FromName" field. It is called by the builders before save.
	FromNameValidator func(string) error
	// ToAccountValidator is a validator for the "ToAccount" field. It is called by the builders before save.
	ToAccountValidator func(string) error
	// ToAccountPhoneNoValidator is a validator for the "ToAccountPhoneNo" field. It is called by the builders before save.
	ToAccountPhoneNoValidator func(string) error
	// ToAccountNameValidator is a validator for the "ToAccountName" field. It is called by the builders before save.
	ToAccountNameValidator func(string) error
	// BankCodeValidator is a validator for the "BankCode" field. It is called by the builders before save.
	BankCodeValidator func(string) error
	// TerminalIdValidator is a validator for the "TerminalId" field. It is called by the builders before save.
	TerminalIdValidator func(string) error
	// TerminalTypeValidator is a validator for the "TerminalType" field. It is called by the builders before save.
	TerminalTypeValidator func(string) error
	// ToAccount105Validator is a validator for the "ToAccount105" field. It is called by the builders before save.
	ToAccount105Validator func(string) error
	// FromReference105Validator is a validator for the "FromReference105" field. It is called by the builders before save.
	FromReference105Validator func(string) error
	// PartnerRefValidator is a validator for the "PartnerRef" field. It is called by the builders before save.
	PartnerRefValidator func(string) error
	// ResponseCodeValidator is a validator for the "ResponseCode" field. It is called by the builders before save.
	ResponseCodeValidator func(string) error
	// ResponseDescriptionValidator is a validator for the "ResponseDescription" field. It is called by the builders before save.
	ResponseDescriptionValidator func(string) error
)
